# Start from golang base image
FROM golang:alpine as builder

# Add maintainer info
LABEL maintainer="Maxime Blanc"

# Install git
# Git is required for fetching dependencies
RUN apk update && apk add --no-cache git

# Set the current working directory inside the container
WORKDIR /app

# Copy source files
COPY . .

# Install and clean up dependencies
# Dependencies will be cached go.mod and go.sum are not changed
RUN go mod tidy

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd

# Start a new stage from scratch
FROM alpine:latest
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the pre-built binary file fron the previous stage
COPY --from=builder /app/main .
COPY --from=builder /app/.env .
# COPY --from=builder /app/templates ./templates
# COPY --from=builder /app/pkg ./pkg
COPY --from=builder /app/migrations ./migrations
# COPY -- from=builder /app/tls ./tls

# Expose port to the outside world
EXPOSE 2308

# Command to run the executable
CMD [ "./main" ]
